language: python

branches:
  # prevent bors temporary branches to be built
  except:
  - staging.tmp
  - trying.tmp

env:
  # This project adheres to NEP-29
  # https://numpy.org/neps/nep-0029-deprecation_policy.html

  # Refer to https://docs.scipy.org/doc/numpy/release.html for
  # min/max Python version supported by numpy
  # Refer to history of https://github.com/lebigot/uncertainties/blob/master/setup.py
  # for min/max Python versions supported by uncertainties
  # At the moment of writing, uncertainties doesn't officially support Python 3.8

  # Without numpy, without uncertainties
  - UNCERTAINTIES=0   PYTHON=3.6 NUMPY_VERSION=0 PANDAS=0
  - UNCERTAINTIES=0   PYTHON=3.7 NUMPY_VERSION=0 PANDAS=0
  - UNCERTAINTIES=0   PYTHON=3.8 NUMPY_VERSION=0 PANDAS=0
  # Without numpy, min version of uncertainties
  - UNCERTAINTIES=3.0 PYTHON=3.6 NUMPY_VERSION=0 PANDAS=0
  - UNCERTAINTIES=3.0 PYTHON=3.7 NUMPY_VERSION=0 PANDAS=0
  # Min version of numpy, without uncertainties
  - UNCERTAINTIES=0   PYTHON=3.6 NUMPY_VERSION=1.14 PANDAS=0
  - UNCERTAINTIES=0   PYTHON=3.7 NUMPY_VERSION=1.14 PANDAS=0
  - UNCERTAINTIES=0   PYTHON=3.8 NUMPY_VERSION=1.17 PANDAS=0
  # Min version of numpy, min version of uncertainties
  - UNCERTAINTIES=3.0 PYTHON=3.6 NUMPY_VERSION=1.14 PANDAS=0
  - UNCERTAINTIES=3.0 PYTHON=3.7 NUMPY_VERSION=1.14 PANDAS=0
  # Latest versions of numpy and uncertainties (where different from the minimum ones)
  - UNCERTAINTIES=3.1 PYTHON=3.6 NUMPY_VERSION=1.17 PANDAS=0
  - UNCERTAINTIES=3.1 PYTHON=3.7 NUMPY_VERSION=1.17 PANDAS=0

  # TODO: Should pandas tests be removed or replaced wih import checks?
  #- UNCERTAINTIES=0 PYTHON=3.6 NUMPY_VERSION=1.14 PANDAS=1

before_install:
  - sudo apt-get update
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  # Useful for debugging any issues with conda
  - conda info -a

  # The next couple lines fix a crash with multiprocessing on Travis and are not specific to using Miniconda
  # But broke travis 2019-08
  # - sudo rm -rf /dev/shm
  # - sudo ln -s /run/shm /dev/shm

  - export ENV_NAME=travis

install:
  - conda create --yes -n $ENV_NAME python=$PYTHON pip
  - source activate $ENV_NAME
  - if [ $UNCERTAINTIES != '0' ]; then pip install uncertainties==$UNCERTAINTIES; fi
  - if [ $NUMPY_VERSION != '0' ]; then conda install --yes numpy==$NUMPY_VERSION; fi
  # this is superslow but suck it up until updates to pandas are made
  - if [[ $PANDAS == '1' ]]; then pip install numpy cython pytest pytest-cov nbval; pip install git+https://github.com/pandas-dev/pandas.git@bdb7a1603f1e0948ca0cab011987f616e7296167; python -c 'import pandas; print(pandas.__version__)'; fi
  - pip install coveralls

script:
  # if we're doing the pandas tests and hence have pytest available, we can
  # simply use it to run all the tests
  - if [[ $PANDAS == '1' ]]; then python -bb -m coverage run -p --source=pint --omit="*test*","*compat*" -m py.test -rfsxEX; fi
  # test notebooks too if pandas available
  - if [[ $PANDAS == '1' ]]; then pip install -e .; pytest --nbval notebooks/*; fi
  - if [[ $PANDAS == '0' ]]; then python -bb -m coverage run -p --source=pint --omit="*test*","*compat*","*pandas*" setup.py test; fi
  - coverage combine
  - coverage report -m

after_success:
  - coveralls --verbose
